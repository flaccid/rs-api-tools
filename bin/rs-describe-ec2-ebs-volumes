#!/usr/bin/ruby

# rs-describe-ec2-ebs-volumes [--cloud <cloud_id>] [--json] [--xml] [--help]

require 'rubygems'
require 'getoptlong'

def usage
  puts("#{$0} [--cloud] [--help] [--xml] [--json]")
	exit
end

opts = GetoptLong.new(
  [ '--cloud', '-c', GetoptLong::OPTIONAL_ARGUMENT ],
  [ '--xml', '-x', GetoptLong::OPTIONAL_ARGUMENT ],
  [ '--json', '-j', GetoptLong::OPTIONAL_ARGUMENT ],
  [ '--help', '-h', GetoptLong::OPTIONAL_ARGUMENT ]
)

json = false
xml = false
cloud_id = false

opts.each do |opt, arg|
  case opt
    when '--cloud'
      cloud_id = arg
    when '--json'
      json = true
    when '--xml'
      xml = true
    when '--help'
      usage; exit
  	end
end

# RightScale (public) cloud IDs
rs_clouds = Array.new
rs_clouds.push({:cloud_id => 1, :name => "AWS US-East", :region => "us-east-1"})
rs_clouds.push({:cloud_id => 2, :name => "AWS EU", :region => "eu-west-1"})
rs_clouds.push({:cloud_id => 3, :name => "AWS US-West", :region => "us-west-1"})
rs_clouds.push({:cloud_id => 4, :name => "AWS AP-Singapore", :region => "ap-southeast-1"})
rs_clouds.push({:cloud_id => 5, :name => "AWS AP-Tokyo", :region => "ap-northeast-1"})
rs_clouds.push({:cloud_id => 6, :name => "AWS AP-Oregon", :region => "us-west-2"})
rs_clouds.push({:cloud_id => 7, :name => "AWS SA-Sao Paulo", :region => "sa-east-1"})

require 'rest_connection'

ebs_volumes = Array.new

if cloud_id
  ebs_volumes += Ec2EbsVolume.find_by_cloud_id(cloud_id)
else
  rs_clouds.each { |cloud|
    puts "Fetching from #{cloud[:name]} (#{cloud[:region]})."
    ebs_volumes += Ec2EbsVolume.find_by_cloud_id(cloud[:cloud_id])
  }
end

if json
  require 'json'
  puts ebs_volumes.to_json
elsif xml
  require 'active_support'  #for to_xml()
  puts JSON.parse(ebs_volumes.to_json).to_xml(:root => 'ec2-ebs-volumes', :skip_instruct => true)
else
  puts ebs_volumes.to_yaml
end